name: Notify Slack on PR Review Request

on:
  pull_request:
    types: [review_requested]

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
    - name: Send notification to Slack
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      run: |
        # 리뷰어 이메일 가져오기
        REVIEWER_EMAIL=$(jq -r '.pull_request.requested_reviewers[0].email' "$GITHUB_EVENT_PATH")
        echo "Reviewer Email: $REVIEWER_EMAIL"

        # Slack 사용자 목록 가져오기
        SLACK_USERS=$(curl -s -X GET "https://slack.com/api/users.list" -H "Authorization: Bearer $SLACK_TOKEN")
        echo "Slack Users: $SLACK_USERS"

        # 이메일로 Slack 사용자 찾기
        REVIEWER_ID=$(echo "$SLACK_USERS" | jq -r ".members[] | select(.profile.email == \"$REVIEWER_EMAIL\") | .id")

        # 리뷰어 ID 출력
        echo "Reviewer ID: $REVIEWER_ID"

        PR_TITLE=$(jq -r '.pull_request.title' "$GITHUB_EVENT_PATH")
        PR_URL=$(jq -r '.pull_request.html_url' "$GITHUB_EVENT_PATH")

        if [ -n "$REVIEWER_ID" ]; then
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"<@${REVIEWER_ID}> 님에게 새로운 PR 리뷰 요청이 있습니다: *<$PR_URL|$PR_TITLE>*\"
          }" $SLACK_WEBHOOK_URL
        else
          echo "No matching Slack user found for email: $REVIEWER_EMAIL"
        fi
